name: CPython GMIC Debug Python package (Source and Debian/Ubuntu OS compilation)
# For development purpose only, our fastest build chain with testing and without pypi sending

on: [push]

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1

    # Prevent running this job on tag-based releases
    - name: Check if Git tag exists
      run: echo "::set-env name=HEAD_TAG::$(git tag --points-at HEAD)"
    - name: Runs only if Git tag does not exist
      run: |
        echo "This runs because Git tag points at HEAD ..."
        exit 1
      if: env.HEAD_TAG != ''

    - name: Detect G'MIC target version
      run: echo "::set-env name=GMIC_VERSION::$(cat VERSION)"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Compile and run tests on .so, .whl and source distribution of gmic-py ${{ env.GMIC_VERSION }}
      working-directory: ./
      env:
        # TWINE_PASSWORD_GITHUB_SECRET: ${{ secrets.TWINE_PASSWORD_GITHUB_SECRET }} # For build_tools.bash 11_send_to_pypi
        PYTHON3: python3
        PIP3: pip3
      run: |
        for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
        sudo apt-get update; sudo apt-get install -y libfftw3-dev libcurl4-openssl-dev libpng-dev zlib1g-dev libomp5 libomp-dev
        sudo apt-get install clang-format
        # bash build_tools.bash 00_all_steps 
        bash build_tools.bash 21_check_c_style # should stop this script on style error
        bash build_tools.bash 23_check_python_style # should stop this script on style error

        bash build_tools.bash 1_clean_and_regrab_gmic_src
        bash build_tools.bash 2b_compile_debug
        ldd build/lib.linux-x86_64-3.*/gmic.cpython-3*-x86_64-linux-gnu.so
        bash build_tools.bash 3_test_compiled_so
        # && bash build_tools.bash 11_send_to_pypi #Note that most probably nothing will be sent to PyPI because of too modern linked libraries 
    - name: upload .so debug build dir as artifact
      uses: actions/upload-artifact@v2
      with:
        name: gmic-py-ubuntu-debug-build-dir
        path: build/
