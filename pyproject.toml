[project]
name = "gmic"
description = "Python bindings for the G'MIC C++ image processing library"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    { "name" = "David Tschumperlé", "email" = "David.Tschumperle@ensicaen.fr" },
    { "name" = "Sébastien Fourey", "email" = "Sebastien.Fourey@ensicaen.fr" },
    { "name" = "Jonathan-David Schröder", "email" = "jonathan.schroder@gmail.com" },
    { "name" = "Lauréline Nevin", "email" = "laureline.nevin@unicaen.fr" }
]
keywords = ["gmic", "graphics", "image", "filter"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Other Audience",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Artistic Software",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development",
    "Topic :: Multimedia :: Graphics",
    "License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
    "Programming Language :: Python :: 3",
]
dynamic = ["version"]

dependencies = []

[project.optional-dependencies]
jupyter = ["wurlitzer"]

[project.urls]
"Bug Reports" = "https://github.com/GreycLab/gmic-py/issues"
"Funding" = "https://libreart.info/en/projects/gmic"
"Say Thanks!" = "https://twitter.com/gmic_eu"
"Source" = "https://github.com/GreycLab/gmic-py"
"Documentation" = "https://gmic-py.readthedocs.io"


[build-system]
requires = ["scikit-build-core", "nanobind~=1.9.2"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
logging.level = "WARNING"
minimum-version = "0.9"
build-dir = "build"

[tool.scikit-build.cmake]
version = ">=3.17"
build-type = "Release"
targets = []

[tool.scikit-build.sdist]
include = []
exclude = ["/docs", "/examples", "/tests", "/lib/gmic/html", "/lib/gmic/resources"]
reproducible = true
cmake = false

[tool.scikit-build.wheel]
packages = []
exclude = []
license-files = ["COPYING"]
py-api = "cp38"

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]
root = "lib/gmic/"
tag_regex = "v.(?P<version>\\d+\\.\\d+\\.\\d+)"






